@Article{Borgström2015,
author="Borgstr{\"o}m, Johannes
and Huang, Shuqin
and Johansson, Magnus
and Raabjerg, Palle
and Victor, Bj{\"o}rn
and {\AA}man Pohjola, Johannes
and Parrow, Joachim",
title="Broadcast psi-calculi with an application to wireless protocols",
journal="Software {\&} Systems Modeling",
year="2015",
month="Feb",
day="01",
volume="14",
number="1",
pages="201--216",
abstract="Psi-calculi is a parametric framework for the extensions of pi-calculus, with arbitrary data structures and logical assertions for facts about data. In this paper we add primitives for broadcast communication in order to model wireless protocols. The additions preserve the purity of the psi-calculi semantics, and we formally prove the standard congruence and structural properties of bisimilarity. We demonstrate the expressive power of broadcast psi-calculi by modelling the wireless ad hoc routing protocol LUNAR and verifying a basic reachability property.",
issn="1619-1374",
doi="10.1007/s10270-013-0375-z",
url="https://doi.org/10.1007/s10270-013-0375-z"
}

@inproceedings{AmanPohjola:2016:BUT:2854065.2854080,
 author = {\AA{}man Pohjola, Johannes and Parrow, Joachim},
 title = {Bisimulation Up-to Techniques for Psi-calculi},
 booktitle = {Proceedings of the 5th ACM SIGPLAN Conference on Certified Programs and Proofs},
 series = {CPP 2016},
 year = {2016},
 isbn = {978-1-4503-4127-1},
 location = {St. Petersburg, FL, USA},
 pages = {142--153},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2854065.2854080},
 doi = {10.1145/2854065.2854080},
 acmid = {2854080},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Bisimulation up-to, Isabelle, Nominal Isabelle, nominal logic, process calculus, psi-calculi},
}

@article{Borgstrom:2015:PWG:2724585.2682570,
 author = {Borgstrom, Johannes and Gutkovas, Ram\={u}nas and Rodhe, Ioana and Victor, Bj\"{o}rn},
 title = {The Psi-Calculi Workbench: A Generic Tool for Applied Process Calculi},
 journal = {ACM Trans. Embed. Comput. Syst.},
 issue_date = {January 2015},
 volume = {14},
 number = {1},
 month = jan,
 year = {2015},
 issn = {1539-9087},
 pages = {9:1--9:25},
 articleno = {9},
 numpages = {25},
 url = {http://doi.acm.org/10.1145/2682570},
 doi = {10.1145/2682570},
 acmid = {2682570},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Wireless sensor networks, process calculi, symbolic semantics},
}

@inproceedings{Wilcox:2015:VFI:2737924.2737958,
 author = {Wilcox, James R. and Woos, Doug and Panchekha, Pavel and Tatlock, Zachary and Wang, Xi and Ernst, Michael D. and Anderson, Thomas},
 title = {Verdi: A Framework for Implementing and Formally Verifying Distributed Systems},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {357--368},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2737924.2737958},
 doi = {10.1145/2737924.2737958},
 acmid = {2737958},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, Formal verification, Verdi, distributed systems, proof assistants},
}

@article{DBLP:journals/corr/abs-0809-3960,
  author    = {Jesper Bengtson and
               Joachim Parrow},
  title     = {Formalising the pi-calculus using nominal logic},
  journal   = {Logical Methods in Computer Science},
  volume    = {5},
  number    = {2},
  year      = {2009},
  url       = {http://arxiv.org/abs/0809.3960},
  timestamp = {Tue, 15 Nov 2011 16:45:57 +0100},
  biburl    = {http://dblp.org/rec/bib/journals/corr/abs-0809-3960},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@Inbook{Pitts2001,
author="Pitts, Andrew M.",
editor="Kobayashi, Naoki
and Pierce, Benjamin C.",
title="Nominal Logic: A First Order Theory of Names and Binding",
bookTitle="Theoretical Aspects of Computer Software: 4th International Symposium, TACS 2001 Sendai, Japan, October 29--31, 2001 Proceedings",
year="2001",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="219--242",
abstract="This paper formalises within first-order logic some common practices in computer science to do with representing and reasoning about syntactical structures involving named bound variables (as opposed to nameless terms, explicit substitutions, or higher order abstract syntax). It introduces Nominal Logic, a version of first-order many-sorted logic with equality containing primitives for renaming via name-swapping and for freshness of names, from which a notion of binding can be derived. Its axioms express key properties of these primitives, which are satisfied by the FM-sets model of syntax introduced in [11]. Nominal Logic serves as a vehicle for making two general points. Firstly, nameswapping has much nicer logical properties than more general forms of renaming while at the same time providing a sufficient foundation for a theory of structural induction/recursion for syntax modulo $\alpha$-conversion. Secondly, it is useful for the practice of operational semantics to make explicit the equivariance property of assertions about syntax --- namely that their validity is invariant under name-swapping.",
isbn="978-3-540-45500-4",
doi="10.1007/3-540-45500-0_11",
url="https://doi.org/10.1007/3-540-45500-0_11"
}

@Inbook{Röckl2001,
author="R{\"o}ckl, Christine
and Hirschkoff, Daniel
and Berghofer, Stefan",
editor="Honsell, Furio
and Miculan, Marino",
title="Higher-Order Abstract Syntax with Induction in Isabelle/HOL: Formalizing the $\pi$-Calculus and Mechanizing the Theory of Contexts",
bookTitle="Foundations of Software Science and Computation Structures: 4th International Conference, FOSSACS 2001 Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001 Genova, Italy, April 2--6, 2001 Proceedings",
year="2001",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="364--378",
abstract="Higher-order abstract syntax is a natural way to formalize programming languages with binders, like the $\pi$-calculus, because $\alpha$-conversion, instantiations and capture avoidance are delegated to the meta-level of the provers, making tedious substitutions superfluous. However, such formalizations usually lack structural induction, which makes syntax-analysis impossible. Moreover, when applied in logical frameworks with object-logics, like Isabelle/HOL or standard extensions of Coq, exotic terms can be defined, for which important syntactic properties become invalid.",
isbn="978-3-540-45315-4",
doi="10.1007/3-540-45315-6_24",
url="https://doi.org/10.1007/3-540-45315-6_24"
}

@article{DBLP:journals/corr/abs-1101-3262,
  author    = {Jesper Bengtson and
               Magnus Johansson and
               Joachim Parrow and
               Bj{\"{o}}rn Victor},
  title     = {Psi-calculi: a framework for mobile processes with nominal data and
               logic},
  journal   = {Logical Methods in Computer Science},
  volume    = {7},
  number    = {1},
  year      = {2011},
  url       = {https://doi.org/10.2168/LMCS-7(1:11)2011},
  doi       = {10.2168/LMCS-7(1:11)2011},
  timestamp = {Wed, 03 May 2017 14:47:54 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/abs-1101-3262},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Chlipala:2010:VCI:1706299.1706312,
 author = {Chlipala, Adam},
 title = {A Verified Compiler for an Impure Functional Language},
 booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '10},
 year = {2010},
 isbn = {978-1-60558-479-9},
 location = {Madrid, Spain},
 pages = {93--106},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1706299.1706312},
 doi = {10.1145/1706299.1706312},
 acmid = {1706312},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler verification, interactive proof assistants},
} 
